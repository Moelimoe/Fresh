# -*- coding:utf-8 -*-
"""
Django settings for dailyfresh project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 将装有app的目录apps插入到python导入模块的目录，插入到首位（0），会让该模块最先被查找到
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7s8j@2d@c5v#+q9bdog^15yd%up^n0x#m!$^8fydqs1ah^54$k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# APPEND_SLASH = False

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'haystack',  # haystack要放在应用的上面
    'tinymce',
    'user',
    'goods',
    'cart',
    'order',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dailyfresh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dailyfresh.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'fresh',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': '192.168.43.99',
        'PORT': 3306,

    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# 富文本编辑器配置
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}

# user.User继承django自带的用户认证方法AbstractUser，要修改一下迁移时的用户创建表而不使用数据库默认的表
AUTH_USER_MODEL = 'user.User'

# 邮件配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# 邮件SMTP服务器地址，邮箱中可以看
EMAIL_HOST = 'smtp.163.com'
# SMTP的端口号
EMAIL_PORT = 25
# 发送邮件的邮箱
EMAIL_HOST_USER = 'freshdayday@163.com'
# 在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'BCLLVAOISZZYGEWK'
# 收件人看到的发件人
EMAIL_FROM = 'Daily Fresh<freshdayday@163.com>'
EMAIL_USE_TLS = False

# redis缓存配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        # "LOCATION": REDIS_URL + '0',  # 0号数据库配置缓存
        "LOCATION": 'redis://192.168.43.99:6379/1',
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
# session配置，指定缓存
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# 未登录状态进入用户中心页面时自动跳转到登录页面
LOGIN_URL = '/user/login'

# 修改django默认的上传和保存文件的位置为fdfs的存储服务器
DEFAULT_FILE_STORAGE = 'utils.fdfs.storage.FDFSStorage'

# fdfs存储服务器上nginx的IP和PORT
FastDFS_URL = 'http://192.168.43.99:8888/'
# fastdfs配置文件的路径
CONF_PATH = r'E:\ProgramNotes\Django项目练习\fresh\apps\utils\fdfs\client.conf'

# redis broker存储数据库
BROKER = 'redis://192.168.43.99:6379/0'

# haystack全文检索配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # 使用whoosh引擎（从whoosh_backend.py中添加了中文分词ChineseAnalyzer方法，并新建到whoosh_cn_backend.py）
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',   # whoosh_backend替换成了新建的whoosh_cn_backend
        # 索引文件路径
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}

# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# 设定搜索结果的页面每页显示的商品（对象）的数量
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 1
